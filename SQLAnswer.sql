-- task 1 Question num: a.
SELECT STOREID , STREETADDRESS FROM STORE ORDER BY POSTCODE;
-- task 1 Question num: b.
SELECT FILLINGID,FILLING.NAME ,CATEGORY.NAME as CAT  FROM FILLING INNER JOIN CATEGORY USING (CATEGORYID);

-- task 1 Question num: c.
SELECT Ordertab.Orderid,
Manager.FName || ' ' || Manager.LName AS Manager_Name, Sandwich.name AS SAN_NAME, Bread.name AS BREAD_NAME FROM ORDERTAB
JOIN Store USING(StoreID)
JOIN Manager USING(ManagerID)
JOIN Sandwich USING(sandwichid)
JOIN Bread USING(BreadID)
WHERE Ordertab.Completiondate IS NOT NULL 
ORDER BY Ordertab.Orderdate DESC, Sandwich.name ASC;


-- task 3 question c.
CREATE OR REPLACE FUNCTION get_order_price(p_order_id IN NUMBER)
RETURN NUMBER
AS
    v_order_price NUMBER;
BEGIN
    -- Calculate the order price by joining the ORDERS, SANDWICHES, FILLINGS, and BREADS tables
    SELECT SUM(FILLINGS.GRAMPRICE*ORDERFILLINGS.QUANTITY + BREADS.LOAFPRICE)
    INTO v_order_price
    FROM ORDERS
    JOIN SANDWICHES ON ORDERS.SANDWICHID = SANDWICHES.SANDWICHID
    JOIN ORDERFILLINGS ON ORDERFILLINGS.SANDWICHID = SANDWICHES.SANDWICHID
    JOIN FILLINGS ON ORDERFILLINGS.FILLINGID = FILLINGS.FILLINGID
    JOIN BREADS ON SANDWICHES.BREADID = BREADS.BREADID
    WHERE ORDERS.ORDERID = p_order_id;
    RETURN v_order_price;
END;